import math
from random import random
import numpy as np
from _decimal import Decimal


def factorial(x):
    ans = Decimal(1)
    while x > 0:
        ans = ans * x
        x = x - 1
    return ans


def experiment(x):
    rnd = Decimal(random())
    sum = Decimal(0)
    ans = 0
    while sum < rnd:
        ans = ans + 1
        sum += np.exp(-x) * (x ** ans) / factorial(ans)
        if ans > 25:
            return ans
    return ans


iss = [3, 5, 11]
js = [4, 7, 12]
alphas = [Decimal(2.0), Decimal(5.0)]
mus = [Decimal(2.5), Decimal(6.0)]

for i in iss:
    for j in js:
        if j < i:
            continue
        for alpha in alphas:
            for mu in mus:
                successful_experiment = Decimal(0)
                experiment_count = Decimal(0)
                for q in range(0, 10000):
                    x = experiment(alpha)
                    y = experiment(mu)
                    if x + y == j:
                        experiment_count = experiment_count + 1
                        if x == i:
                            successful_experiment = successful_experiment + 1
                ans = Decimal(factorial(j)) / (factorial(j - i) * factorial(i)) \
                      * pow(alpha, i) * pow(mu, j - i) / pow(alpha + mu, j)
                if experiment_count > 0:
                    print(
                        f"Результаты эксперимента для i={i}, j={j}, alpha={alpha:0,.2f}, mu={mu:0,.2f} \n "
                        f"Ответ, полученный с помощью симуляции: {successful_experiment / experiment_count:0,.4f} \n "
                        f"Точный ответ, полученный аналитически: {ans:0,.4f} \n")
